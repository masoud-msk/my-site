{"version":3,"file":"drag.esm.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = plueClient(startPinchClients[0], minusClient(nowCenter, startCenter));\n    const pinchPrevClient = plueClient(startPinchClients[0], minusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    if (clients.length === 1) {\n        return clients[0];\n    }\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function plueClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function minusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position, OnDrag } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist,\n} from \"./utils\";\nimport { addEvent, removeEvent, now } from \"@daybrush/utils\";\n\n/**\n * You can set up drag events in any browser.\n */\nclass Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n    private customDist = [0, 0];\n    private targets: Array<Element | Window> = [];\n    private prevTime: number = 0;\n    private isDouble: boolean = false;\n    /**\n     *\n     */\n    constructor(targets: Array<Element | Window> | Element | Window, options: DragOptions = {}) {\n        const elements = [].concat(targets as any) as Array<Element | Window> ;\n        this.options = {\n            container: elements.length > 1 ? window : elements[0],\n            preventRightClick: true,\n            preventDefault: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.customDist = [0, 0];\n        this.targets = elements;\n\n        if (this.isMouse) {\n            elements.forEach(el => {\n                addEvent(el, \"mousedown\", this.onDragStart);\n            });\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n            addEvent(container!, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            elements.forEach(el => {\n                addEvent(el, \"touchstart\", this.onDragStart, passive);\n            });\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n            addEvent(container!, \"touchcancel\", this.onDragEnd, passive);\n        }\n    }\n    /**\n     *\n     */\n    public isDragging() {\n        return this.isDrag;\n    }\n    /**\n     *\n     */\n    public isFlag() {\n        return this.flag;\n    }\n    /**\n     *\n     */\n    public isPinchFlag() {\n        return this.pinchFlag;\n    }\n    /**\n     *\n     */\n    public isPinching() {\n        return this.isPinch;\n    }\n    /**\n     *\n     */\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        isCallDrag && this.onDrag(e, true);\n    }\n    /**\n     * @method\n     */\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        const { container, pinchOutside, dragstart, preventRightClick, preventDefault } = this.options;\n        const isTouch = this.isTouch;\n\n        if (!this.flag && isTouch && pinchOutside) {\n            setTimeout(() => {\n                addEvent(container!, \"touchstart\", this.onDragStart);\n            });\n        }\n        if (this.flag && isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (isMultiTouch(e)) {\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.customDist = [0, 0];\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        if (\n            (preventRightClick && (e.which === 3 || e.button === 2))\n            || (dragstart && dragstart({\n                type: \"dragstart\",\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.startClients = [];\n            this.prevClients = [];\n            this.flag = false;\n        }\n        this.isDouble = now() - this.prevTime < 200;\n        this.flag && preventDefault && e.preventDefault();\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const result = this.move([0, 0], e, clients);\n\n        if (!result || (!result.deltaX && !result.deltaY)) {\n            return;\n        }\n        const drag = this.options.drag;\n\n        drag && drag({\n            ...result,\n            isScroll: !!isScroll,\n            inputEvent: e,\n        });\n    }\n    public move([deltaX, deltaY]: number[], inputEvent: any, clients = this.prevClients): OnDrag | undefined {\n        const customDist = this.customDist;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        customDist[0] += deltaX;\n        customDist[1] += deltaY;\n        position.deltaX += deltaX;\n        position.deltaY += deltaY;\n\n        const {\n            deltaX: positionDeltaX,\n            deltaY: positionDeltaY,\n        } = position;\n\n        position.distX += customDist[0];\n        position.distY += customDist[1];\n\n        this.movement += Math.sqrt(positionDeltaX * positionDeltaX + positionDeltaY * positionDeltaY);\n        this.prevClients = clients;\n        this.isDrag = true;\n\n        return {\n            type: \"drag\",\n            datas: this.datas,\n            ...position,\n            movement: this.movement,\n            isDrag: this.isDrag,\n            isPinch: this.isPinch,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const { dragend, pinchOutside, container } = this.options;\n        if (this.isTouch && pinchOutside) {\n            removeEvent(container!, \"touchstart\", this.onDragStart);\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        const currentTime = now();\n        const isDouble = !this.isDrag && this.isDouble;\n\n        this.prevTime = this.isDrag || isDouble ? 0 : currentTime;\n        this.startClients = [];\n        this.prevClients = [];\n\n        dragend && dragend({\n            type: \"dragend\",\n            datas: this.datas,\n            isDouble,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n        pinchstart({\n            type: \"pinchstart\",\n            datas: this.datas,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag || clients.length < 2) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const distance = getDist(clients);\n        pinch({\n            type: \"pinch\",\n            datas: this.datas,\n            movement: this.movement,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            type: \"pinchend\",\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    /**\n     *\n     */\n    public unset() {\n        const targets = this.targets;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            targets.forEach(target => {\n                removeEvent(target, \"mousedown\", this.onDragStart);\n            });\n            removeEvent(container, \"mousemove\", this.onDrag);\n            removeEvent(container, \"mouseup\", this.onDragEnd);\n            removeEvent(container, \"contextmenu\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            targets.forEach(target => {\n                removeEvent(target, \"touchstart\", this.onDragStart);\n            });\n            removeEvent(container, \"touchstart\", this.onDragStart);\n            removeEvent(container, \"touchmove\", this.onDrag);\n            removeEvent(container, \"touchend\", this.onDragEnd);\n            removeEvent(container, \"touchcancel\", this.onDragEnd);\n        }\n    }\n}\n\nexport default Dragger;\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n"],"names":["getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","plueClient","minusClient","pinchPrevClient","getPosition","isMultiTouch","e","touches","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","clientX","clientY","prevX","prevY","startX","startY","deltaX","deltaY","distX","distY","getDist","Math","sqrt","pow","getPositions","map","i","min","push","client1","client2","targets","options","_this","flag","cancelable","_a","container","pinchOutside","dragstart","preventRightClick","preventDefault","isTouch","setTimeout","addEvent","onDragStart","removeEvent","changedTouches","pinchFlag","onPinchStart","customDist","isDrag","datas","movement","position","which","button","type","inputEvent","isDouble","now","prevTime","isScroll","onPinch","result","move","drag","dragend","onPinchEnd","currentTime","elements","concat","window","pinchThreshold","events","indexOf","isMouse","forEach","el","onDrag","onDragEnd","passive_1","passive","isPinch","isCallDrag","positionDeltaX","positionDeltaY","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","pinch","distance","scale","pinchend","target","setDrag","Dragger"],"mappings":"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"}