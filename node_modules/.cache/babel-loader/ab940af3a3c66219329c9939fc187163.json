{"remainingRequest":"/home/sjd/Desktop/vue-command/node_modules/babel-loader/lib/index.js!/home/sjd/Desktop/vue-command/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sjd/Desktop/vue-command/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sjd/Desktop/vue-command/src/components/VueCommand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sjd/Desktop/vue-command/src/components/VueCommand.vue","mtime":1599004144267},{"path":"/home/sjd/Desktop/vue-command/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VueCommand.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    ref=\"vue-command\"\n    class=\"vue-command\">\n    <slot name=\"bar\">\n      <div\n        v-if=\"!hideBar\"\n        class=\"term-bar\">\n        <span\n          v-if=\"!hideTitle\"\n          class=\"term-title\">{{ title }}</span>\n      </div>\n    </slot>\n\n    <div\n      ref=\"term-std\"\n      class=\"term-std\">\n      <search\n        v-if=\"isSearch\"\n        ref=\"search\"\n        :executed=\"local.executed\"\n        :is-search.sync=\"isSearch\"\n        :stdin=\"stdin\"\n        @click=\"focus\"\n        @handle=\"handle\"/>\n\n      <div\n        v-show=\"!isSearch\"\n        ref=\"term-cont\"\n        :class=\"{ 'term-cont-fullscreen': local.isFullscreen }\"\n        class=\"term-cont\"\n        @click=\"focus\">\n        <div v-if=\"showIntro\">{{ intro }}</div>\n\n        <div\n          v-for=\"(stdout, index) in local.history\"\n          :key=\"index\"\n          class=\"term-hist\"\n          :class=\"{\n            'term-hist-fullscreen':\n              local.isFullscreen && index === local.history.length - 1\n          }\">\n          <stdout\n            v-show=\"!local.isFullscreen || index === local.history.length - 1\"\n            :component=\"stdout\"\n            class=\"term-stdout\"/>\n\n          <stdin\n            v-show=\"\n              (index === 0 && !local.isFullscreen) ||\n                (!(index === local.history.length - 1 && local.isInProgress) &&\n                  !local.isFullscreen)\n            \"\n            ref=\"stdin\"\n            :bus=\"bus\"\n            :cursor=\"local.cursor\"\n            :hide-prompt=\"hidePrompt\"\n            :is-fullscreen=\"local.isFullscreen\"\n            :is-in-progress=\"local.isInProgress\"\n            :is-last=\"index === local.history.length - 1\"\n            :prompt=\"prompt\"\n            :help-text=\"helpText\"\n            :help-timeout=\"helpTimeout\"\n            :show-help=\"showHelp\"\n            :stdin.sync=\"local.stdin\"\n            :uid=\"_uid\"\n            @handle=\"handle\">\n            <template #prompt>\n              <slot name=\"prompt\" />\n            </template>\n          </stdin>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\n\nimport Search from './Search'\nimport Stdin from './Stdin'\nimport Stdout from './Stdout'\nimport AutocompleteMixin from '../mixins/autocomplete'\nimport HandleMixin from '../mixins/handle'\nimport HistoryMixin from '../mixins/history'\nimport SearchMixin from '../mixins/search'\nimport UIMixin from '../mixins/ui'\nimport { EVENT_LISTENERS } from './../library'\n\n// Event bus for communication\nconst EventBus = new Vue()\n\nexport default {\n  components: { Search, Stdin, Stdout },\n\n  mixins: [AutocompleteMixin, HandleMixin, HistoryMixin, SearchMixin, UIMixin],\n\n  provide () {\n    return {\n      emitExecute: this.emitExecute,\n      emitExecuted: this.emitExecuted,\n      emitInput: this.emitInput,\n      setStdin: this.setStdin\n    }\n  },\n\n  props: {\n    autocompletionResolver: {\n      default: undefined,\n      type: Function\n    },\n\n    builtIn: {\n      default: undefined,\n      type: Function\n    },\n\n    commands: {\n      default: () => ({}),\n      type: Object\n    },\n\n    cursor: {\n      default: 0,\n      type: Number\n    },\n\n    // Default event listeners\n    eventListeners: {\n      default: () => [\n        EVENT_LISTENERS.autocomplete,\n        EVENT_LISTENERS.history,\n        EVENT_LISTENERS.search\n      ],\n\n      type: Array\n    },\n\n    // Non-empty executed commands\n    executed: {\n      default: () => new Set(),\n      type: Set\n    },\n\n    helpTimeout: {\n      default: 4000,\n      type: Number\n    },\n\n    hideBar: {\n      default: false,\n      type: Boolean\n    },\n\n    hidePrompt: {\n      default: false,\n      type: Boolean\n    },\n\n    hideTitle: {\n      default: false,\n      type: Boolean\n    },\n\n    helpText: {\n      default: 'Type help',\n      type: String\n    },\n\n    // All executed commands\n    history: {\n      default: () => [],\n      type: Array\n    },\n\n    intro: {\n      default: 'Fasten your seatbelts!',\n      type: String\n    },\n\n    isFullscreen: {\n      default: false,\n      type: Boolean\n    },\n\n    isInProgress: {\n      default: false,\n      type: Boolean\n    },\n\n    notFound: {\n      default: 'command not found',\n      type: String\n    },\n\n    // Options when parsing Stdin\n    parserOptions: {\n      default: () => ({}),\n      type: Object\n    },\n\n    // History command pointer\n    pointer: {\n      default: 0,\n      type: Number\n    },\n\n    prompt: {\n      default: 'sjd@quantum:~',\n      type: String\n    },\n\n    showHelp: {\n      default: false,\n      type: Boolean\n    },\n\n    showIntro: {\n      default: false,\n      type: Boolean\n    },\n\n    // Current Stdin\n    stdin: {\n      default: '',\n      type: String\n    },\n\n    title: {\n      default: 'sjd@quantum:~',\n      type: String\n    }\n  },\n\n  data: () => ({\n    // Bus for communication\n    bus: EventBus,\n\n    // A local copy to allow the absence of properties\n    local: {\n      // Current Stdin\n      stdin: ''\n    },\n\n    // Detect scroll and resize events\n    scroll: {\n      eventListener: undefined,\n      // Determinates if scolled to bottom\n      isBottom: true,\n      resizeObserver: undefined\n    }\n  }),\n\n  watch: {\n    stdin () {\n      this.setStdin(this.stdin)\n    },\n\n    'local.stdin' () {\n      // Emit the current Stdin as an event\n      this.$emit('input', this.local.stdin)\n\n      // Update given property\n      this.$emit('update:stdin', this.local.stdin)\n\n      // Make searching history work again\n      if (this.local.stdin === '') {\n        this.setPointer(this.local.executed.size)\n      }\n    }\n  },\n\n  mounted () {\n    // Scroll to bottom if Stdout mutates terminal height\n    this.scroll.resizeObserver = new ResizeObserver(async event => {\n      await this.$nextTick()\n\n      // Only scroll to bottom if it was scrolled to bottom before\n      if (this.scroll.isBottom) {\n        this.$refs['term-std'].scrollTop = this.$refs['term-std'].scrollHeight\n      }\n    })\n\n    this.scroll.resizeObserver.observe(this.$refs['term-cont'])\n\n    // Check if scrolled to bottom\n    this.scroll.eventListener = () => {\n      const terminal = this.$refs['term-std']\n      this.scroll.isBottom =\n        terminal.scrollHeight - terminal.scrollTop - terminal.clientHeight ===\n        0\n    }\n\n    this.$refs['term-std'].addEventListener(\n      'scroll',\n      this.scroll.eventListener\n    )\n\n    // Bind given event listeners\n    this.eventListeners.forEach(eventListener => eventListener(this))\n  },\n\n  created () {\n    // Observe \"executed\" changes since Vue.js can't watch a \"Set\". See: https://github.com/ndabAP/vue-command/issues/151\n    this.executed.add = function (...x) {\n      this.local.executed.add(...x)\n\n      Object.getPrototypeOf(this).add.call(this, ...x)\n    }\n    this.executed.clear = function () {\n      this.local.executed.clear()\n\n      Object.getPrototypeOf(this).add.call(this)\n    }\n    this.executed.delete = function (...x) {\n      this.local.executed.delete(...x)\n\n      Object.getPrototypeOf(this).delete.call(this, ...x)\n    }\n\n    // Apply user given properties\n    this.setCursor(this.cursor)\n    this.setPointer(this.pointer)\n    this.setStdin(this.stdin)\n    this.setIsInProgress(this.isInProgress)\n    this.setIsFullscreen(this.isFullscreen)\n\n    const history = [...this.history]\n    // If there is no entry push dummy Stdout to show Stdin\n    if (history.length === 0) {\n      // Push dummy Stdout without termination\n      history.push({\n        name: 'VueCommandDummyStdout',\n        render: createElement => createElement('span', {}, '')\n      })\n\n      // Update the history property\n      this.$emit('update:history', [...history])\n    }\n\n    this.setHistory([...history])\n  },\n\n  methods: {\n    emitInput (input) {\n      this.$emit('input', input)\n    },\n\n    emitExecute () {\n      this.$emit('execute')\n    },\n\n    emitExecuted () {\n      this.$emit('executed')\n    },\n\n    // Focus on last Stdin or search\n    focus () {\n      // Check if search mode\n      if (this.isSearch) {\n        this.$refs.search.focus()\n\n        return\n      }\n\n      // Latest Stdin is latest history entry\n      const stdin = this.$refs.stdin[this.local.history.length - 1]\n      // Call component method\n      stdin.focus()\n    },\n\n    setStdin (stdin) {\n      this.local.stdin = stdin\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../scss/mixins\";\n\n.vue-command {\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  .term-bar {\n    background: #23262c;\n    border: 1px solid #191a1b;\n    display: block;\n    justify-content: center;\n    top: 0;\n    width: 100%;\n    display: flex;\n  }\n\n  .term-title {\n    font-family: \"Montserrat\", sans-serif;\n    font-size: 18px;\n    margin: 12px;\n    background: #23262c;\n    color: white;\n  }\n\n  .term-std {\n    background: #002b36;\n    display: block;\n    flex-direction: column;\n    width: 100%;\n\n    @extend .term-hist-container-fullscreen;\n  }\n\n  .term-cont {\n    font-family: \"Inconsolata\", monospace;\n    padding-right: 0.5rem;\n    padding-bottom: 0.5rem;\n    flex: 1;\n  }\n\n  .term-hist-container-fullscreen {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n  }\n\n  .term-stdout {\n    word-break: break-all;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}