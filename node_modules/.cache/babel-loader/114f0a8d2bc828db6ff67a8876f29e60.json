{"remainingRequest":"/home/sjd/Desktop/my-site/node_modules/babel-loader/lib/index.js!/home/sjd/Desktop/my-site/node_modules/eslint-loader/index.js??ref--13-0!/home/sjd/Desktop/my-site/src/mixins/handle.js","dependencies":[{"path":"/home/sjd/Desktop/my-site/src/mixins/handle.js","mtime":1598999993622},{"path":"/home/sjd/Desktop/my-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGdldE9wdHMgZnJvbSAnZ2V0b3B0cyc7CmltcG9ydCB7IGNyZWF0ZVN0ZGVyciwgY3JlYXRlRHVtbXlTdGRvdXQgfSBmcm9tICcuLi9saWJyYXJ5JzsgLy8gQHZ1ZS9jb21wb25lbnQKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm92aWRlKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVybWluYXRlOiB0aGlzLnRlcm1pbmF0ZQogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICAvLyBIYW5kbGVzIHRoZSBjb21tYW5kCiAgICBhc3luYyBoYW5kbGUoc3RkaW4pIHsKICAgICAgLy8gRmlyc3QgdG9rZW4gaXMgcHJvZ3JhbQogICAgICBjb25zdCBwcm9ncmFtID0gc3RkaW4udHJpbSgpLnNwbGl0KCcgJylbMF07IC8vIENoZWNrIGlmIGNvbW1hbmQgaXMgcmVndWxhciBjb21tYW5kCgogICAgICBpZiAodHlwZW9mIHRoaXMuY29tbWFuZHNbcHJvZ3JhbV0gPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAvLyBDaGVjayBpZiBjb21tYW5kIGlzIHJlZ3VsYXIgY29tbWFuZAogICAgICAgIGF3YWl0IFByb21pc2UucmVzb2x2ZSh0aGlzLmV4ZWN1dGUoc3RkaW4pKTsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gQ2hlY2sgaWYgY29tbWFuZCBtaWdodCBiZSBidWlsdC1pbgoKCiAgICAgIGlmICh0eXBlb2YgdGhpcy5idWlsdEluID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgYXdhaXQgUHJvbWlzZS5yZXNvbHZlKHRoaXMuYnVpbHRJbihzdGRpbiwgdGhpcykpOyAvLyBUaGUgYnVpbHQgaW4gZnVuY3Rpb24gbXVzdCB0YWtlIGNhcmUgb2YgYWxsIG90aGVyIHN0ZXBzCgogICAgICAgIHJldHVybjsKICAgICAgfSAvLyBDb21tYW5kIG11c3QgYmUgZW1wdHkgb3IgY2FuJ3QgYmUgZm91bmQKCgogICAgICB0aGlzLmNvbW1hbmROb3RGb3VuZChzdGRpbik7CiAgICB9LAoKICAgIC8vIEV4ZWN1dGVzIGEgcmVndWxhciBjb21tYW5kCiAgICBhc3luYyBleGVjdXRlKHN0ZGluKSB7CiAgICAgIC8vIFJlbW92ZSBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlCiAgICAgIHN0ZGluID0gc3RkaW4udHJpbSgpOwoKICAgICAgY29uc3QgcHJvZ3JhbSA9IGdldE9wdHMoc3RkaW4uc3BsaXQoJyAnKSwgdGhpcy5wYXJzZXJPcHRpb25zKS5fWzBdOyAvLyBDcmVhdGUgZW1wdHkgY29tcG9uZW50IGluIGNhc2Ugbm8gcHJvZ3JhbSBoYXMgYmVlbiBmb3VuZAoKCiAgICAgIGxldCBjb21wb25lbnQgPSBjcmVhdGVEdW1teVN0ZG91dCgpOyAvLyBTcGxpdCBTdGRpbiBpbnRvIGNodW5rcyB0byBwYXJzZSBpdCBjb3JyZWN0bHkuCiAgICAgIC8vIFNlZTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE4NjQ3Nzc2IGFuZCBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZGFiQVAvdnVlLWNvbW1hbmQvaXNzdWVzLzE3NgogICAgICAvLyBDb250YWlucyB0aGUgdG9rZW5zIHRvIG1lcmdlIG9wdGlvbi12YWx1ZSBwYWlycwoKICAgICAgY29uc3QgdG9rZW5zID0gW107IC8vIENvbnRhaW5zIHRoZSBjdXJyZW50IHRva2VuIHBhaXIgZm9yIGVhY2ggaXRlcmF0aW9uCgogICAgICBsZXQgdG9rZW5QYWlycyA9IFtdOwogICAgICBjb25zdCB0b2tlblBhaXJzRXhwcmVzc2lvbiA9IC9bXlxzIl0rfCIoW14iXSopIi9naTsgLy8gSXRlcmF0ZSB0aHJvdWdoIGFsbCB0b2tlbnMKCiAgICAgIGRvIHsKICAgICAgICB0b2tlblBhaXJzID0gdG9rZW5QYWlyc0V4cHJlc3Npb24uZXhlYyhzdGRpbik7CgogICAgICAgIGlmICh0b2tlblBhaXJzICE9IG51bGwpIHsKICAgICAgICAgIHRva2Vucy5wdXNoKHRva2VuUGFpcnNbMV0gPyB0b2tlblBhaXJzWzFdIDogdG9rZW5QYWlyc1swXSk7CiAgICAgICAgfQogICAgICB9IHdoaWxlICh0b2tlblBhaXJzICE9IG51bGwpOyAvLyBDb250YWlucyBhY2NvbW1vZGF0ZWQgdG9rZW5zIHRvIHBhcnNlCgoKICAgICAgY29uc3QgYWNjb21tb2RhdGVkVG9rZW5zID0gW107CiAgICAgIGxldCBpc05leHRUb2tlbk9wdGlvblZhbHVlID0gZmFsc2U7CiAgICAgIHRva2Vucy5mb3JFYWNoKCh0b2tlbiwgaW5kZXgpID0+IHsKICAgICAgICAvLyBDaGVjayBpZiBuZXh0IHRva2VuIGlzIG9wdGlvbiB2YWx1ZQogICAgICAgIGlmIChpc05leHRUb2tlbk9wdGlvblZhbHVlKSB7CiAgICAgICAgICBpc05leHRUb2tlbk9wdGlvblZhbHVlID0gZmFsc2U7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBDaGVjayBpZiBvcHRpb24gaGFzIHZhbHVlIGFzc2lnbmVkCgoKICAgICAgICBpZiAodG9rZW4uZW5kc1dpdGgoJz0nKSkgewogICAgICAgICAgLy8gTWVyZ2Ugb3B0aW9uIHdpdGggdmFsdWUKICAgICAgICAgIGFjY29tbW9kYXRlZFRva2Vucy5wdXNoKHRva2VuICsgdG9rZW5zW2luZGV4ICsgMV0pOwogICAgICAgICAgaXNOZXh0VG9rZW5PcHRpb25WYWx1ZSA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIFRva2VuIGlzIG5vdCBwYXJ0IG9mIG9wdGlvbi12YWx1ZSBwYWlyCiAgICAgICAgICBhY2NvbW1vZGF0ZWRUb2tlbnMucHVzaCh0b2tlbik7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgY29uc3QgcGFyc2VkID0gZ2V0T3B0cyhhY2NvbW1vZGF0ZWRUb2tlbnMsIHRoaXMucGFyc2VyT3B0aW9ucyk7CiAgICAgIGNvbXBvbmVudCA9IGF3YWl0IFByb21pc2UucmVzb2x2ZSh0aGlzLmNvbW1hbmRzW3Byb2dyYW1dKHBhcnNlZCkpOwogICAgICBjb21wb25lbnQgPSB0aGlzLnNldHVwQ29tcG9uZW50KGNvbXBvbmVudCwgdGhpcy5sb2NhbC5oaXN0b3J5Lmxlbmd0aCwgcGFyc2VkKTsgLy8gRGlzYWxsb3cgZW1wdHkgU3RkaW4gaW4gaGlzdG9yeQoKICAgICAgaWYgKHN0ZGluICE9PSAnJykgewogICAgICAgIC8vIFJlbW92ZSBkdXBsaWNhdGUgY29tbWFuZHMgdG8gcHVzaCB0byBsYXRlc3QgZW50cnkKICAgICAgICBjb25zdCBleGVjdXRlZCA9IG5ldyBTZXQodGhpcy5sb2NhbC5leGVjdXRlZCk7CiAgICAgICAgZXhlY3V0ZWQuZGVsZXRlKHN0ZGluKTsKICAgICAgICBleGVjdXRlZC5hZGQoc3RkaW4pOyAvLyBNdXRhdGUgcHJvcGVydHkKCiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmV4ZWN1dGVkJywgZXhlY3V0ZWQpOwogICAgICAgIHRoaXMuc2V0RXhlY3V0ZWQoZXhlY3V0ZWQpOwogICAgICB9IC8vIFBvaW50IGhpc3RvcnkgdG8gbmV3IGNvbW1hbmQKCgogICAgICB0aGlzLnNldFBvaW50ZXIodGhpcy5sb2NhbC5leGVjdXRlZC5zaXplKTsKICAgICAgY29uc3QgaGlzdG9yeSA9IFsuLi50aGlzLmxvY2FsLmhpc3RvcnldOwogICAgICBoaXN0b3J5LnB1c2goY29tcG9uZW50KTsgLy8gRW1pdCBjb21tYW5kIGV4ZWN1dGluZyBzdGFydGVkCgogICAgICB0aGlzLmVtaXRFeGVjdXRlKCk7IC8vIFRlbGwgdGVybWluYWwgdGhlcmUgaXMgYSBjb21tYW5kIGluIHByb2dyZXNzCgogICAgICB0aGlzLnNldElzSW5Qcm9ncmVzcyh0cnVlKTsKICAgICAgdGhpcy5zZXRIaXN0b3J5KGhpc3RvcnkpOyAvLyBVcGRhdGUgdGhlIGhpc3RvcnkgcHJvcGVydHkKCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpoaXN0b3J5JywgWy4uLmhpc3RvcnldKTsKICAgIH0sCgogICAgLy8gQ29tbWFuZCBpcyBlbXB0eSBvciBub3QgZm91bmQKICAgIGNvbW1hbmROb3RGb3VuZChzdGRpbikgewogICAgICBsZXQgY29tcG9uZW50ID0gY3JlYXRlRHVtbXlTdGRvdXQoKTsgLy8gT25seSBub24gZW1wdHkgY29tbWFuZHMgc2hvdWxkIGJlCgogICAgICBpZiAoc3RkaW4gIT09ICcnKSB7CiAgICAgICAgLy8gTm8gY29tbWFuZCBmb3VuZAogICAgICAgIGNvbXBvbmVudCA9IGNyZWF0ZVN0ZGVycihgJHtzdGRpbn06ICR7dGhpcy5ub3RGb3VuZH1gLCB0cnVlKTsKICAgICAgICBjb21wb25lbnQgPSB0aGlzLnNldHVwQ29tcG9uZW50KGNvbXBvbmVudCwgdGhpcy5sb2NhbC5oaXN0b3J5Lmxlbmd0aCk7IC8vIFJlbW92ZSBkdXBsaWNhdGUgY29tbWFuZHMgdG8gcHVzaCB0byBsYXRlc3QgZW50cnkKCiAgICAgICAgY29uc3QgZXhlY3V0ZWQgPSBuZXcgU2V0KHRoaXMubG9jYWwuZXhlY3V0ZWQpOwogICAgICAgIGV4ZWN1dGVkLmRlbGV0ZShzdGRpbik7CiAgICAgICAgZXhlY3V0ZWQuYWRkKHN0ZGluKTsgLy8gTXV0YXRlIHByb3BlcnR5CgogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleGVjdXRlZCcsIGV4ZWN1dGVkKTsKICAgICAgICB0aGlzLnNldEV4ZWN1dGVkKGV4ZWN1dGVkKTsgLy8gUG9pbnQgaGlzdG9yeSB0byBuZXcgY29tbWFuZAoKICAgICAgICB0aGlzLnNldFBvaW50ZXIodGhpcy5sb2NhbC5leGVjdXRlZC5zaXplKTsKICAgICAgfQoKICAgICAgY29uc3QgaGlzdG9yeSA9IFsuLi50aGlzLmxvY2FsLmhpc3RvcnldOwogICAgICBoaXN0b3J5LnB1c2goY29tcG9uZW50KTsgLy8gRW1pdCBjb21tYW5kIGV4ZWN1dGluZyBzdGFydGVkCgogICAgICB0aGlzLmVtaXRFeGVjdXRlKCk7IC8vIFRlbGwgdGVybWluYWwgdGhlcmUgaXMgYSBjb21tYW5kIGluIHByb2dyZXNzCgogICAgICB0aGlzLnNldElzSW5Qcm9ncmVzcyh0cnVlKTsKICAgICAgdGhpcy5zZXRIaXN0b3J5KGhpc3RvcnkpOyAvLyBVcGRhdGUgdGhlIGhpc3RvcnkgcHJvcGVydHkKCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpoaXN0b3J5JywgWy4uLmhpc3RvcnldKTsKICAgIH0sCgogICAgLy8gQWRkIGVudmlyb25tZW50IGFuZCBjb250ZXh0IGFuZCBpbnN0YW50bHkgdGVybWluYXRlCiAgICBzZXR1cENvbXBvbmVudChjb21wb25lbnQsIGVudHJpZXMgPSAwLCBwYXJzZWQgPSB7fSkgewogICAgICAvLyBQcmV2ZW50IHRvIHdvcmsgd2l0aCBzYW1lIHJlZmVyZW5jZQogICAgICBjb21wb25lbnQgPSB7IC4uLmNvbXBvbmVudAogICAgICB9OwoKICAgICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbXBvbmVudCwgJ2NvbXB1dGVkJykpIHsKICAgICAgICBjb21wb25lbnQuY29tcHV0ZWQgPSB7fTsKICAgICAgfSAvLyBDcmVhdGUgY29waWVzCgoKICAgICAgY29uc3QgY3Vyc29yID0gdGhpcy5sb2NhbC5jdXJzb3I7CiAgICAgIGNvbnN0IGV4ZWN1dGVkID0gbmV3IFNldCh0aGlzLmxvY2FsLmV4ZWN1dGVkKTsKICAgICAgY29uc3QgaGlzdG9yeSA9IFsuLi50aGlzLmxvY2FsLmhpc3RvcnldOwogICAgICBjb25zdCBwb2ludGVyID0gdGhpcy5sb2NhbC5wb2ludGVyOwogICAgICBjb25zdCBzdGRpbiA9IHRoaXMubG9jYWwuc3RkaW47CiAgICAgIGNvbXBvbmVudC5jb21wdXRlZCA9IHsKICAgICAgICBlbnZpcm9ubWVudDogKCkgPT4gKHsKICAgICAgICAgIGlzRXhlY3V0aW5nOiB0aGlzLmxvY2FsLmlzSW5Qcm9ncmVzcyAmJiB0aGlzLmxvY2FsLmhpc3RvcnkubGVuZ3RoIC0gMSA9PT0gZW50cmllcywKICAgICAgICAgIGlzRnVsbHNjcmVlbjogdGhpcy5sb2NhbC5pc0Z1bGxzY3JlZW4sCiAgICAgICAgICBpc0luUHJvZ3Jlc3M6IHRoaXMubG9jYWwuaXNJblByb2dyZXNzCiAgICAgICAgfSksCiAgICAgICAgY29udGV4dDogKCkgPT4gKHsKICAgICAgICAgIGN1cnNvciwKICAgICAgICAgIGV4ZWN1dGVkLAogICAgICAgICAgaGlzdG9yeSwKICAgICAgICAgIHBhcnNlZCwKICAgICAgICAgIHBvaW50ZXIsCiAgICAgICAgICBzdGRpbgogICAgICAgIH0pLAogICAgICAgIC4uLmNvbXBvbmVudC5jb21wdXRlZAogICAgICB9OwogICAgICByZXR1cm4gY29tcG9uZW50OwogICAgfSwKCiAgICAvLyBFeGVjdXRlcyBjb21tb24gZmluYWwgdGFza3MgYWZ0ZXIgY29tbWFuZCBoYXMgYmVlbiBmaW5pc2hlZAogICAgdGVybWluYXRlKCkgewogICAgICAvLyBTZXQgbmV3IFN0ZGluIHRvIGVtcHR5CiAgICAgIHRoaXMuc2V0U3RkaW4oJycpOyAvLyBFeGl0IGZ1bGxzY3JlZW4gaWYgbmVjZXNzYXJ5CgogICAgICB0aGlzLnNldElzRnVsbHNjcmVlbihmYWxzZSk7IC8vIEluZGljYXRlIGVuZCBvZiBjb21tYW5kCgogICAgICB0aGlzLiRlbWl0KCdleGVjdXRlZCcpOyAvLyBBbGxvdyBuZXcgU3RkaW4KCiAgICAgIHRoaXMuc2V0SXNJblByb2dyZXNzKGZhbHNlKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["/home/sjd/Desktop/my-site/src/mixins/handle.js"],"names":["getOpts","createStderr","createDummyStdout","provide","terminate","methods","handle","stdin","program","trim","split","commands","Promise","resolve","execute","builtIn","commandNotFound","parserOptions","_","component","tokens","tokenPairs","tokenPairsExpression","exec","push","accommodatedTokens","isNextTokenOptionValue","forEach","token","index","endsWith","parsed","setupComponent","local","history","length","executed","Set","delete","add","$emit","setExecuted","setPointer","size","emitExecute","setIsInProgress","setHistory","notFound","entries","hasOwnProperty","call","computed","cursor","pointer","environment","isExecuting","isInProgress","isFullscreen","context","setStdin","setIsFullscreen"],"mappings":"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","sourcesContent":["import getOpts from 'getopts'\n\nimport { createStderr, createDummyStdout } from '../library'\n\n// @vue/component\nexport default {\n  provide () {\n    return {\n      terminate: this.terminate\n    }\n  },\n\n  methods: {\n    // Handles the command\n    async handle (stdin) {\n      // First token is program\n      const program = stdin.trim().split(' ')[0]\n\n      // Check if command is regular command\n      if (typeof this.commands[program] === 'function') {\n        // Check if command is regular command\n        await Promise.resolve(this.execute(stdin))\n\n        return\n      }\n\n      // Check if command might be built-in\n      if (typeof this.builtIn === 'function') {\n        await Promise.resolve(this.builtIn(stdin, this))\n\n        // The built in function must take care of all other steps\n        return\n      }\n\n      // Command must be empty or can't be found\n      this.commandNotFound(stdin)\n    },\n\n    // Executes a regular command\n    async execute (stdin) {\n      // Remove leading and trailing whitespace\n      stdin = stdin.trim()\n\n      const program = getOpts(stdin.split(' '), this.parserOptions)._[0]\n      // Create empty component in case no program has been found\n      let component = createDummyStdout()\n\n      // Split Stdin into chunks to parse it correctly.\n      // See: https://stackoverflow.com/a/18647776 and see: https://github.com/ndabAP/vue-command/issues/176\n      // Contains the tokens to merge option-value pairs\n      const tokens = []\n      // Contains the current token pair for each iteration\n      let tokenPairs = []\n      const tokenPairsExpression = /[^\\s\"]+|\"([^\"]*)\"/gi\n      // Iterate through all tokens\n      do {\n        tokenPairs = tokenPairsExpression.exec(stdin)\n\n        if (tokenPairs != null) {\n          tokens.push(tokenPairs[1] ? tokenPairs[1] : tokenPairs[0])\n        }\n      } while (tokenPairs != null)\n\n      // Contains accommodated tokens to parse\n      const accommodatedTokens = []\n      let isNextTokenOptionValue = false\n      tokens.forEach((token, index) => {\n        // Check if next token is option value\n        if (isNextTokenOptionValue) {\n          isNextTokenOptionValue = false\n\n          return\n        }\n\n        // Check if option has value assigned\n        if (token.endsWith('=')) {\n          // Merge option with value\n          accommodatedTokens.push(token + tokens[index + 1])\n\n          isNextTokenOptionValue = true\n        } else {\n          // Token is not part of option-value pair\n          accommodatedTokens.push(token)\n        }\n      })\n\n      const parsed = getOpts(accommodatedTokens, this.parserOptions)\n\n      component = await Promise.resolve(this.commands[program](parsed))\n      component = this.setupComponent(component, this.local.history.length, parsed)\n\n      // Disallow empty Stdin in history\n      if (stdin !== '') {\n        // Remove duplicate commands to push to latest entry\n        const executed = new Set(this.local.executed)\n        executed.delete(stdin)\n        executed.add(stdin)\n\n        // Mutate property\n        this.$emit('update:executed', executed)\n        this.setExecuted(executed)\n      }\n\n      // Point history to new command\n      this.setPointer(this.local.executed.size)\n\n      const history = [...this.local.history]\n      history.push(component)\n\n      // Emit command executing started\n      this.emitExecute()\n      // Tell terminal there is a command in progress\n      this.setIsInProgress(true)\n\n      this.setHistory(history)\n      // Update the history property\n      this.$emit('update:history', [...history])\n    },\n\n    // Command is empty or not found\n    commandNotFound (stdin) {\n      let component = createDummyStdout()\n      // Only non empty commands should be\n      if (stdin !== '') {\n        // No command found\n        component = createStderr(`${stdin}: ${this.notFound}`, true)\n        component = this.setupComponent(component, this.local.history.length)\n\n        // Remove duplicate commands to push to latest entry\n        const executed = new Set(this.local.executed)\n        executed.delete(stdin)\n        executed.add(stdin)\n\n        // Mutate property\n        this.$emit('update:executed', executed)\n        this.setExecuted(executed)\n\n        // Point history to new command\n        this.setPointer(this.local.executed.size)\n      }\n\n      const history = [...this.local.history]\n      history.push(component)\n\n      // Emit command executing started\n      this.emitExecute()\n      // Tell terminal there is a command in progress\n      this.setIsInProgress(true)\n\n      this.setHistory(history)\n      // Update the history property\n      this.$emit('update:history', [...history])\n    },\n\n    // Add environment and context and instantly terminate\n    setupComponent (component, entries = 0, parsed = {}) {\n      // Prevent to work with same reference\n      component = { ...component }\n\n      if (!hasOwnProperty.call(component, 'computed')) {\n        component.computed = {}\n      }\n      // Create copies\n      const cursor = this.local.cursor\n      const executed = new Set(this.local.executed)\n      const history = [...this.local.history]\n      const pointer = this.local.pointer\n      const stdin = this.local.stdin\n      component.computed = {\n        environment: () => ({\n          isExecuting: this.local.isInProgress && (this.local.history.length - 1 === entries),\n          isFullscreen: this.local.isFullscreen,\n          isInProgress: this.local.isInProgress\n        }),\n\n        context: () => ({\n          cursor,\n          executed,\n          history,\n          parsed,\n          pointer,\n          stdin\n        }),\n\n        ...component.computed\n      }\n\n      return component\n    },\n\n    // Executes common final tasks after command has been finished\n    terminate () {\n      // Set new Stdin to empty\n      this.setStdin('')\n      // Exit fullscreen if necessary\n      this.setIsFullscreen(false)\n      // Indicate end of command\n      this.$emit('executed')\n      // Allow new Stdin\n      this.setIsInProgress(false)\n    }\n  }\n}\n"]}]}