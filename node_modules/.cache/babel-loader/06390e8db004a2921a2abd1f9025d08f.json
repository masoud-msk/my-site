{"remainingRequest":"/home/sjd/Desktop/my-site/node_modules/babel-loader/lib/index.js!/home/sjd/Desktop/my-site/node_modules/eslint-loader/index.js??ref--13-0!/home/sjd/Desktop/my-site/src/mixins/history.js","dependencies":[{"path":"/home/sjd/Desktop/my-site/src/mixins/history.js","mtime":1598999993622},{"path":"/home/sjd/Desktop/my-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQHZ1ZS9jb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgewogIHByb3ZpZGUoKSB7CiAgICByZXR1cm4gewogICAgICBzZXRQb2ludGVyOiB0aGlzLnNldFBvaW50ZXIKICAgIH07CiAgfSwKCiAgZGF0YTogKCkgPT4gKHsKICAgIGxvY2FsOiB7CiAgICAgIGV4ZWN1dGVkOiBuZXcgU2V0KCksCiAgICAgIC8vIEFsbCBleGVjdXRlZCBjb21tYW5kcwogICAgICBoaXN0b3J5OiBbXSwKICAgICAgLy8gSGlzdG9yeSBjb21tYW5kIHBvaW50ZXIKICAgICAgcG9pbnRlcjogMAogICAgfQogIH0pLAogIHdhdGNoOiB7CiAgICBoaXN0b3J5KCkgewogICAgICAvLyBDcmVhdGVzIGEgbmV3IGNvcHkgdG8gcHJldmVudCBtdXRhdGlvbgogICAgICB0aGlzLnNldEhpc3RvcnkoWy4uLnRoaXMuaGlzdG9yeV0pOwogICAgfSwKCiAgICAnbG9jYWwucG9pbnRlcicoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpwb2ludGVyJywgdGhpcy5sb2NhbC5wb2ludGVyKTsKICAgIH0sCgogICAgcG9pbnRlcigpIHsKICAgICAgdGhpcy5zZXRQb2ludGVyKHRoaXMucG9pbnRlcik7CiAgICB9CgogIH0sCiAgbWV0aG9kczogewogICAgaW5jcmVhc2VIaXN0b3J5KCkgewogICAgICAvLyBDaGVjayBpZiBwb2ludGVyIGlzIG11dGFibGUKICAgICAgaWYgKHRoaXMubG9jYWwucG9pbnRlciA8IHRoaXMubG9jYWwuZXhlY3V0ZWQuc2l6ZSAtIDEpIHsKICAgICAgICB0aGlzLmxvY2FsLnBvaW50ZXIrKzsgLy8gU2V0IG5ldyBwb2ludGVkIFN0ZGluCgogICAgICAgIHRoaXMubG9jYWwuc3RkaW4gPSBbLi4udGhpcy5sb2NhbC5leGVjdXRlZF1bdGhpcy5sb2NhbC5wb2ludGVyXTsKICAgICAgfQogICAgfSwKCiAgICBkZWNyZWFzZUhpc3RvcnkoKSB7CiAgICAgIC8vIENoZWNrIGlmIHBvaW50ZXIgaXMgbXV0YWJsZQogICAgICBpZiAodGhpcy5sb2NhbC5wb2ludGVyID4gMCkgewogICAgICAgIHRoaXMubG9jYWwucG9pbnRlci0tOyAvLyBTZXQgbmV3IHBvaW50ZWQgU3RkaW4KCiAgICAgICAgdGhpcy5sb2NhbC5zdGRpbiA9IFsuLi50aGlzLmxvY2FsLmV4ZWN1dGVkXVt0aGlzLmxvY2FsLnBvaW50ZXJdOwogICAgICB9CiAgICB9LAoKICAgIHNldEV4ZWN1dGVkKGV4ZWN1dGVkKSB7CiAgICAgIHRoaXMubG9jYWwuZXhlY3V0ZWQgPSBleGVjdXRlZDsKICAgIH0sCgogICAgc2V0SGlzdG9yeShoaXN0b3J5KSB7CiAgICAgIHRoaXMubG9jYWwuaGlzdG9yeSA9IGhpc3Rvcnk7CiAgICB9LAoKICAgIHNldFBvaW50ZXIocG9pbnRlcikgewogICAgICB0aGlzLmxvY2FsLnBvaW50ZXIgPSBwb2ludGVyOwogICAgfQoKICB9Cn07"},{"version":3,"sources":["/home/sjd/Desktop/my-site/src/mixins/history.js"],"names":["provide","setPointer","data","local","executed","Set","history","pointer","watch","setHistory","$emit","methods","increaseHistory","size","stdin","decreaseHistory","setExecuted"],"mappings":"AAAA;AACA,eAAe;AACbA,EAAAA,OAAO,GAAI;AACT,WAAO;AACLC,MAAAA,UAAU,EAAE,KAAKA;AADZ,KAAP;AAGD,GALY;;AAObC,EAAAA,IAAI,EAAE,OAAO;AACXC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,IAAIC,GAAJ,EADL;AAEL;AACAC,MAAAA,OAAO,EAAE,EAHJ;AAIL;AACAC,MAAAA,OAAO,EAAE;AALJ;AADI,GAAP,CAPO;AAiBbC,EAAAA,KAAK,EAAE;AACLF,IAAAA,OAAO,GAAI;AACT;AACA,WAAKG,UAAL,CAAgB,CAAC,GAAG,KAAKH,OAAT,CAAhB;AACD,KAJI;;AAML,sBAAmB;AACjB,WAAKI,KAAL,CAAW,gBAAX,EAA6B,KAAKP,KAAL,CAAWI,OAAxC;AACD,KARI;;AAULA,IAAAA,OAAO,GAAI;AACT,WAAKN,UAAL,CAAgB,KAAKM,OAArB;AACD;;AAZI,GAjBM;AAgCbI,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,GAAI;AACjB;AACA,UAAI,KAAKT,KAAL,CAAWI,OAAX,GAAsB,KAAKJ,KAAL,CAAWC,QAAX,CAAoBS,IAApB,GAA2B,CAArD,EAAyD;AACvD,aAAKV,KAAL,CAAWI,OAAX,GADuD,CAGvD;;AACA,aAAKJ,KAAL,CAAWW,KAAX,GAAmB,CAAC,GAAG,KAAKX,KAAL,CAAWC,QAAf,EAAyB,KAAKD,KAAL,CAAWI,OAApC,CAAnB;AACD;AACF,KATM;;AAWPQ,IAAAA,eAAe,GAAI;AACjB;AACA,UAAI,KAAKZ,KAAL,CAAWI,OAAX,GAAqB,CAAzB,EAA4B;AAC1B,aAAKJ,KAAL,CAAWI,OAAX,GAD0B,CAG1B;;AACA,aAAKJ,KAAL,CAAWW,KAAX,GAAmB,CAAC,GAAG,KAAKX,KAAL,CAAWC,QAAf,EAAyB,KAAKD,KAAL,CAAWI,OAApC,CAAnB;AACD;AACF,KAnBM;;AAqBPS,IAAAA,WAAW,CAAEZ,QAAF,EAAY;AACrB,WAAKD,KAAL,CAAWC,QAAX,GAAsBA,QAAtB;AACD,KAvBM;;AAyBPK,IAAAA,UAAU,CAAEH,OAAF,EAAW;AACnB,WAAKH,KAAL,CAAWG,OAAX,GAAqBA,OAArB;AACD,KA3BM;;AA6BPL,IAAAA,UAAU,CAAEM,OAAF,EAAW;AACnB,WAAKJ,KAAL,CAAWI,OAAX,GAAqBA,OAArB;AACD;;AA/BM;AAhCI,CAAf","sourcesContent":["// @vue/component\nexport default {\n  provide () {\n    return {\n      setPointer: this.setPointer\n    }\n  },\n\n  data: () => ({\n    local: {\n      executed: new Set(),\n      // All executed commands\n      history: [],\n      // History command pointer\n      pointer: 0\n    }\n  }),\n\n  watch: {\n    history () {\n      // Creates a new copy to prevent mutation\n      this.setHistory([...this.history])\n    },\n\n    'local.pointer' () {\n      this.$emit('update:pointer', this.local.pointer)\n    },\n\n    pointer () {\n      this.setPointer(this.pointer)\n    }\n  },\n\n  methods: {\n    increaseHistory () {\n      // Check if pointer is mutable\n      if (this.local.pointer < (this.local.executed.size - 1)) {\n        this.local.pointer++\n\n        // Set new pointed Stdin\n        this.local.stdin = [...this.local.executed][this.local.pointer]\n      }\n    },\n\n    decreaseHistory () {\n      // Check if pointer is mutable\n      if (this.local.pointer > 0) {\n        this.local.pointer--\n\n        // Set new pointed Stdin\n        this.local.stdin = [...this.local.executed][this.local.pointer]\n      }\n    },\n\n    setExecuted (executed) {\n      this.local.executed = executed\n    },\n\n    setHistory (history) {\n      this.local.history = history\n    },\n\n    setPointer (pointer) {\n      this.local.pointer = pointer\n    }\n  }\n}\n"]}]}