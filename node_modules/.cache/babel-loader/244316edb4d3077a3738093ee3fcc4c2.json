{"remainingRequest":"/home/sjd/Desktop/my-site/vue-site/node_modules/babel-loader/lib/index.js!/home/sjd/Desktop/my-site/vue-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sjd/Desktop/my-site/vue-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sjd/Desktop/my-site/vue-site/src/hosted/ChuckNorris.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sjd/Desktop/my-site/vue-site/src/hosted/ChuckNorris.vue","mtime":1599002163095},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvc2pkL0Rlc2t0b3AvbXktc2l0ZS92dWUtc2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBBUElfVVJMID0gJ2h0dHBzOi8vYXBpLmNodWNrbm9ycmlzLmlvL2pva2VzL3JhbmRvbSc7CnZhciBBUElfVElNRU9VVCA9IDUwMDA7IC8vIDUgc2Vjb25kcwoKdmFyIGFib3J0Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTsKZXhwb3J0IGRlZmF1bHQgewogIGluamVjdDogWyd0ZXJtaW5hdGUnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFcnJvcjogZmFsc2UsCiAgICAgIGlzTG9hZGluZzogdHJ1ZSwKICAgICAgam9rZTogJycKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlLCBfeWllbGQkcmVzcG9uc2UkanNvbiwgdmFsdWU7CgogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8vIEFib3J0IGdldHRpbmcgam9rZSB3aGVuIEFQSSByZXF1ZXN0IHRha2VzIGxvbmdlciB0aGFuIGRlZmluZWQgaW4gIkFQSV9USU1FT1VUIgogICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgaWYgKF90aGlzLmlzTG9hZGluZykgewogICAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LCBBUElfVElNRU9VVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKEFQSV9VUkwsIHsKICAgICAgICAgICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3RoaXMuc2V0SXNFcnJvcih0cnVlKTsKCiAgICAgICAgICAgICAgX3RoaXMudGVybWluYXRlKCk7CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfeWllbGQkcmVzcG9uc2UkanNvbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgdmFsdWUgPSBfeWllbGQkcmVzcG9uc2UkanNvbi52YWx1ZTsKICAgICAgICAgICAgICBfdGhpcy5qb2tlID0gdmFsdWU7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKCiAgICAgICAgICAgICAgX3RoaXMuc2V0SXNFcnJvcih0cnVlKTsKCiAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE5OwogICAgICAgICAgICAgIF90aGlzLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBfdGhpcy50ZXJtaW5hdGUoKTsKCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgxOSk7CgogICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE2LCAxOSwgMjNdXSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNldElzRXJyb3I6IGZ1bmN0aW9uIHNldElzRXJyb3IoaXNFcnJvcikgewogICAgICB0aGlzLmlzRXJyb3IgPSBpc0Vycm9yOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ChuckNorris.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AASA,IAAA,OAAA,GAAA,yCAAA;AACA,IAAA,WAAA,GAAA,IAAA,C,CAAA;;AAEA,IAAA,eAAA,GAAA,IAAA,eAAA,EAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,WAAA,CADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA,GAHA;AASA,EAAA,OATA,qBASA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAA,UAAA,CAAA,YAAA;AACA,oBAAA,KAAA,CAAA,SAAA,EAAA;AACA,kBAAA,eAAA,CAAA,KAAA;AACA;AACA,eAJA,EAIA,WAJA,CAAA;AAFA;AAAA;AAAA,qBASA,KAAA,CAAA,OAAA,EAAA;AAAA,gBAAA,MAAA,EAAA,eAAA,CAAA;AAAA,eAAA,CATA;;AAAA;AASA,cAAA,QATA;;AAAA,kBAUA,QAAA,CAAA,EAVA;AAAA;AAAA;AAAA;;AAWA,cAAA,KAAA,CAAA,UAAA,CAAA,IAAA;;AACA,cAAA,KAAA,CAAA,SAAA;;AAZA;;AAAA;AAAA;AAAA,qBAiBA,QAAA,CAAA,IAAA,EAjBA;;AAAA;AAAA;AAiBA,cAAA,KAjBA,wBAiBA,KAjBA;AAkBA,cAAA,KAAA,CAAA,IAAA,GAAA,KAAA;AAlBA;AAAA;;AAAA;AAAA;AAAA;;AAoBA,cAAA,KAAA,CAAA,UAAA,CAAA,IAAA;;AApBA;AAAA;AAsBA,cAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,KAAA,CAAA,SAAA;;AAvBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA,GAlCA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,OADA,EACA;AACA,WAAA,OAAA,GAAA,OAAA;AACA;AAHA;AApCA,CAAA","sourcesContent":["<template>\n  <div>\n    <span v-if=\"!isLoading && !isError\">{{ joke }}</span>\n    <span v-if=\"isLoading && !isError\">Loading ...</span>\n    <span v-if=\"isError\">There was an error getting the joke</span>\n  </div>\n</template>\n\n<script>\nconst API_URL = 'https://api.chucknorris.io/jokes/random'\nconst API_TIMEOUT = 5000 // 5 seconds\n\nconst abortController = new AbortController()\n\nexport default {\n  inject: ['terminate'],\n\n  data: () => ({\n    isError: false,\n    isLoading: true,\n    joke: ''\n  }),\n\n  async mounted () {\n    // Abort getting joke when API request takes longer than defined in \"API_TIMEOUT\"\n    setTimeout(() => {\n      if (this.isLoading) {\n        abortController.abort()\n      }\n    }, API_TIMEOUT)\n\n    try {\n      const response = await fetch(API_URL, { signal: abortController.signal })\n      if (!response.ok) {\n        this.setIsError(true)\n        this.terminate()\n\n        return\n      }\n\n      const { value } = await response.json()\n      this.joke = value\n    } catch (error) {\n      this.setIsError(true)\n    } finally {\n      this.isLoading = false\n      this.terminate()\n    }\n  },\n\n  methods: {\n    setIsError (isError) {\n      this.isError = isError\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/hosted"}]}