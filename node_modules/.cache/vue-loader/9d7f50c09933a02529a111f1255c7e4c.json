{"remainingRequest":"/home/sjd/Desktop/vue-command/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sjd/Desktop/vue-command/src/components/Stdin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sjd/Desktop/vue-command/src/components/Stdin.vue","mtime":1599003307625},{"path":"/home/sjd/Desktop/vue-command/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/vue-command/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBpbmplY3Q6IFsic2V0Q3Vyc29yIiwgInNldFN0ZGluIl0sCgogIHByb3BzOiB7CiAgICBidXM6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IE9iamVjdCwKICAgIH0sCgogICAgY3Vyc29yOiB7CiAgICAgIGRlZmF1bHQ6IDAsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBOdW1iZXIsCiAgICB9LAoKICAgIGhlbHBUZXh0OiB7CiAgICAgIGRlZmF1bHQ6ICIiLAogICAgICB0eXBlOiBTdHJpbmcsCiAgICB9LAoKICAgIGhlbHBUaW1lb3V0OiB7CiAgICAgIGRlZmF1bHQ6IDAsCiAgICAgIHR5cGU6IE51bWJlciwKICAgIH0sCgogICAgaGlkZVByb21wdDogewogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgdHlwZTogQm9vbGVhbiwKICAgIH0sCgogICAgaXNJblByb2dyZXNzOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogQm9vbGVhbiwKICAgIH0sCgogICAgaXNMYXN0OiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogQm9vbGVhbiwKICAgIH0sCgogICAgaXNGdWxsc2NyZWVuOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogQm9vbGVhbiwKICAgIH0sCgogICAgcHJvbXB0OiB7CiAgICAgIGRlZmF1bHQ6ICIiLAogICAgICB0eXBlOiBTdHJpbmcsCiAgICB9LAoKICAgIHNob3dIZWxwOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICB0eXBlOiBCb29sZWFuLAogICAgfSwKCiAgICBzdGRpbjogewogICAgICBkZWZhdWx0OiAiIiwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IFN0cmluZywKICAgIH0sCgogICAgdWlkOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBOdW1iZXIsCiAgICB9LAogIH0sCgogIGRhdGE6ICgpID0+ICh7CiAgICBwbGFjZWhvbGRlcjogIiIsCiAgICBsb2NhbDogewogICAgICAvLyBUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIHRvIGNoYW5nZSB0aGUgcHJvbXB0IGR1cmluZyBydW50aW1lCiAgICAgIHByb21wdDogIiIsCiAgICAgIHN0ZGluOiAiIiwKICAgIH0sCiAgfSksCgogIHdhdGNoOiB7CiAgICBjdXJzb3IoKSB7CiAgICAgIGlmICh0aGlzLmlzTGFzdCkgewogICAgICAgIC8vIE1pcnJvciB0aGUgY3Vyc29yIHBvc2l0aW9uIHRvIHRoZSByZWFsIGN1cnNvciBwb3NpdGlvbgogICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuc2V0U2VsZWN0aW9uUmFuZ2UodGhpcy5jdXJzb3IsIHRoaXMuY3Vyc29yKTsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBpc0luUHJvZ3Jlc3MoKSB7CiAgICAgIGlmICghdGhpcy5pc0luUHJvZ3Jlc3MgJiYgdGhpcy5pc0xhc3QpIHsKICAgICAgICBhd2FpdCB0aGlzLiRuZXh0VGljaygpOwoKICAgICAgICB0aGlzLnNjcm9sbEludG9WaWV3KCk7CiAgICAgICAgdGhpcy5mb2N1cygpOwogICAgICB9CiAgICB9LAoKICAgIGlzTGFzdChpc0xhc3QsIHdhc0xhc3QpIHsKICAgICAgaWYgKHdhc0xhc3QgJiYgIWlzTGFzdCkgewogICAgICAgIC8vIEFsbG93IGNvbXBvbmVudHMgdG8gZ2V0IGludG8gZm9jdXMKICAgICAgICB0aGlzLmJsdXIoKTsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBzdGRpbigpIHsKICAgICAgLy8gT25seSBsYXN0IFN0ZGluIGlzIGFsbG93ZWQgdG8gbXV0YXRlCiAgICAgIGlmICh0aGlzLmlzTGFzdCAmJiAhdGhpcy5pc0luUHJvZ3Jlc3MpIHsKICAgICAgICB0aGlzLmxvY2FsLnN0ZGluID0gdGhpcy5zdGRpbjsKICAgICAgfQoKICAgICAgYXdhaXQgdGhpcy4kbmV4dFRpY2soKTsKICAgICAgLy8gU2V0IGN1cnJlbnQgY3Vyc29yIHBvc2l0aW9uCiAgICAgIHRoaXMuc2V0Q3Vyc29yKHRoaXMuJHJlZnMuaW5wdXQuc2VsZWN0aW9uU3RhcnQpOwogICAgfSwKCiAgICAibG9jYWwuc3RkaW4iKCkgewogICAgICAvLyBTZXQgY3VycmVudCBTdGRpbgogICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6c3RkaW4iLCB0aGlzLmxvY2FsLnN0ZGluKTsKICAgICAgLy8gU2V0IGN1cnJlbnQgY3Vyc29yIHBvc2l0aW9uCiAgICAgIHRoaXMuc2V0Q3Vyc29yKHRoaXMuJHJlZnMuaW5wdXQuc2VsZWN0aW9uU3RhcnQpOwogICAgfSwKICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy5sb2NhbC5wcm9tcHQgPSB0aGlzLnByb21wdDsKICAgIHRoaXMubG9jYWwuc3RkaW4gPSB0aGlzLnN0ZGluOwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvLyBTY3JvbGwgdG8gY3VycmVudCBpbnB1dAogICAgdGhpcy5zY3JvbGxJbnRvVmlldygpOwogICAgLy8gRm9jdXMgbmV3IFN0ZGluCiAgICB0aGlzLmZvY3VzKCk7CgogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIGlmICh0aGlzLmlzTGFzdCAmJiB0aGlzLnNob3dIZWxwKSB7CiAgICAgICAgdGhpcy5zZXRQbGFjZWhvbGRlcih0aGlzLmhlbHBUZXh0KTsKICAgICAgfQogICAgfSwgdGhpcy5oZWxwVGltZW91dCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgLy8gSGFuZGxlIGN1cnJlbnQgY29tbWFuZAogICAgaGFuZGxlKCkgewogICAgICAvLyBQZXJzaXN0IHRoZSBjdXJyZW50IHByb21wdAogICAgICB0aGlzLnNldFByb21wdCh0aGlzLnByb21wdCk7CiAgICAgIC8vIFJlcXVlc3QgdG8gaGFuZGxlIHRoZSBjdXJyZW50IFN0ZGluCiAgICAgIHRoaXMuJGVtaXQoImhhbmRsZSIsIHRoaXMubG9jYWwuc3RkaW4pOwogICAgICAvLyBIaWRlIHRoZSBjdXJyZW50IHBsYWNlaG9sZGVyCiAgICAgIHRoaXMuc2V0UGxhY2Vob2xkZXIoIiIpOwogICAgfSwKCiAgICBzZXRQbGFjZWhvbGRlcihwbGFjZWhvbGRlcikgewogICAgICB0aGlzLnBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXI7CiAgICB9LAoKICAgIHNldFByb21wdChwcm9tdCkgewogICAgICB0aGlzLmxvY2FsLnByb21wdCA9IHByb210OwogICAgfSwKCiAgICBibHVyKCkgewogICAgICB0aGlzLiRyZWZzLmlucHV0LmJsdXIoKTsKICAgIH0sCgogICAgZm9jdXMoKSB7CiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTsKICAgIH0sCgogICAgc2Nyb2xsSW50b1ZpZXcoKSB7CiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuc2Nyb2xsSW50b1ZpZXcoKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Stdin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Stdin.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"term-stdin-container\">\n    <slot name=\"prompt\">\n      <span v-if=\"!hidePrompt\" class=\"term-ps\">{{ local.prompt }}</span>\n    </slot>\n\n    <span class=\"term-stdin\">\n      <input\n        ref=\"input\"\n        v-model=\"local.stdin\"\n        :autofocus=\"isLast\"\n        :disabled=\"!isLast || isInProgress\"\n        :placeholder=\"placeholder\"\n        type=\"text\"\n        autocorrect=\"off\"\n        autocapitalize=\"none\"\n        @click=\"setCursor($refs.input.selectionStart)\"\n        @keyup=\"setCursor($refs.input.selectionStart)\"\n        @keyup.enter.exact=\"handle\"\n      />\n    </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: [\"setCursor\", \"setStdin\"],\n\n  props: {\n    bus: {\n      required: true,\n      type: Object,\n    },\n\n    cursor: {\n      default: 0,\n      required: true,\n      type: Number,\n    },\n\n    helpText: {\n      default: \"\",\n      type: String,\n    },\n\n    helpTimeout: {\n      default: 0,\n      type: Number,\n    },\n\n    hidePrompt: {\n      default: false,\n      type: Boolean,\n    },\n\n    isInProgress: {\n      default: false,\n      required: true,\n      type: Boolean,\n    },\n\n    isLast: {\n      default: false,\n      required: true,\n      type: Boolean,\n    },\n\n    isFullscreen: {\n      default: false,\n      required: true,\n      type: Boolean,\n    },\n\n    prompt: {\n      default: \"\",\n      type: String,\n    },\n\n    showHelp: {\n      default: false,\n      type: Boolean,\n    },\n\n    stdin: {\n      default: \"\",\n      required: true,\n      type: String,\n    },\n\n    uid: {\n      required: true,\n      type: Number,\n    },\n  },\n\n  data: () => ({\n    placeholder: \"\",\n    local: {\n      // This makes it possible to change the prompt during runtime\n      prompt: \"\",\n      stdin: \"\",\n    },\n  }),\n\n  watch: {\n    cursor() {\n      if (this.isLast) {\n        // Mirror the cursor position to the real cursor position\n        this.$refs.input.setSelectionRange(this.cursor, this.cursor);\n      }\n    },\n\n    async isInProgress() {\n      if (!this.isInProgress && this.isLast) {\n        await this.$nextTick();\n\n        this.scrollIntoView();\n        this.focus();\n      }\n    },\n\n    isLast(isLast, wasLast) {\n      if (wasLast && !isLast) {\n        // Allow components to get into focus\n        this.blur();\n      }\n    },\n\n    async stdin() {\n      // Only last Stdin is allowed to mutate\n      if (this.isLast && !this.isInProgress) {\n        this.local.stdin = this.stdin;\n      }\n\n      await this.$nextTick();\n      // Set current cursor position\n      this.setCursor(this.$refs.input.selectionStart);\n    },\n\n    \"local.stdin\"() {\n      // Set current Stdin\n      this.$emit(\"update:stdin\", this.local.stdin);\n      // Set current cursor position\n      this.setCursor(this.$refs.input.selectionStart);\n    },\n  },\n\n  created() {\n    this.local.prompt = this.prompt;\n    this.local.stdin = this.stdin;\n  },\n\n  mounted() {\n    // Scroll to current input\n    this.scrollIntoView();\n    // Focus new Stdin\n    this.focus();\n\n    setTimeout(() => {\n      if (this.isLast && this.showHelp) {\n        this.setPlaceholder(this.helpText);\n      }\n    }, this.helpTimeout);\n  },\n\n  methods: {\n    // Handle current command\n    handle() {\n      // Persist the current prompt\n      this.setPrompt(this.prompt);\n      // Request to handle the current Stdin\n      this.$emit(\"handle\", this.local.stdin);\n      // Hide the current placeholder\n      this.setPlaceholder(\"\");\n    },\n\n    setPlaceholder(placeholder) {\n      this.placeholder = placeholder;\n    },\n\n    setPrompt(promt) {\n      this.local.prompt = promt;\n    },\n\n    blur() {\n      this.$refs.input.blur();\n    },\n\n    focus() {\n      this.$refs.input.focus();\n    },\n\n    scrollIntoView() {\n      this.$refs.input.scrollIntoView();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../scss/mixins\";\n\n.vue-command {\n  .term-stdin-container {\n    display: flex;\n  }\n\n  input,\n  textarea {\n    background: none;\n    border: none;\n    font-family: \"Inconsolata\", monospace;\n    color: #65888c;\n    font-size: 20px;\n    outline: none;\n    flex: 1;\n    width: 100%;\n\n    &::placeholder {\n      color: rgba(255, 255, 255, 0.5);\n    }\n  }\n\n  .term-stdin {\n    flex: 1;\n    color: #65888c;\n    font-size: 20px;\n    margin: 0;\n    border: 0;\n    color: inherit;\n    font-family: inherit;\n    font-size: 1rem;\n  }\n}\n</style>\n"]}]}