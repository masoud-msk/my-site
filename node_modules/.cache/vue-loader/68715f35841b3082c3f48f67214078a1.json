{"remainingRequest":"/home/sjd/Desktop/my-site/vue-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sjd/Desktop/my-site/vue-site/src/components/Search.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/sjd/Desktop/my-site/vue-site/src/components/Search.vue","mtime":1599002628313},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sjd/Desktop/my-site/vue-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi9zY3NzL21peGlucyI7CgoudnVlLWNvbW1hbmQgewogIC50ZXJtLXNlYXJjaC1jb250YWluZXIgewogICAgZGlzcGxheTogZmxleDsKICB9CgogIGlucHV0LAogIHRleHRhcmVhIHsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7CiAgICBmb250LWZhbWlseTogIkluY29uc29sYXRhIiwgbW9ub3NwYWNlOwogICAgZm9udC1zaXplOiAxcmVtOwogICAgb3V0bGluZTogbm9uZTsKICAgIGZsZXg6IDE7CiAgICB3aWR0aDogMTAwJTsKCiAgICAmOjpwbGFjZWhvbGRlciB7CiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7CiAgICB9CiAgfQoKICAudGVybS1zZWFyY2ggewogICAgZmxleDogMTsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICBtYXJnaW46IDA7CiAgICBib3JkZXI6IDA7CiAgICBjb2xvcjogaW5oZXJpdDsKICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OwogICAgZm9udC1zaXplOiAxcmVtOwogIH0KCiAgLnRlcm0tcHMgewogICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07CiAgICBjb2xvcjogIzcxYWQzODsKICAgIGZvbnQtc2l6ZTogMjBweDsKICB9Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    ref=\"term-cont\"\n    class=\"term-cont term-cont-fullscreen\"\n    @keydown.tab.exact.prevent=\"setIsSearch(false)\"\n    @keydown.esc.exact.prevent=\"setIsSearch(false)\"\n    @keydown.ctrl.67.exact.prevent=\"sigint\">\n    <div class=\"term-search-container\">\n      <span class=\"term-search\">\n        (reverse-i-search)`\n        <input\n          ref=\"input\"\n          v-model=\"search\"\n          autofocus\n          type=\"text\"\n          autocorrect=\"off\"\n          autocapitalize=\"none\"\n          @keyup.enter.exact=\"handle\"/>\n        ': {{ command }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: ['setStdin'],\n\n  props: {\n    executed: {\n      required: true,\n      type: Set\n    },\n\n    // Indicates if search is visible\n    isSearch: {\n      required: true,\n      type: Boolean\n    },\n\n    // Current Stdin\n    stdin: {\n      required: true,\n      type: String\n    }\n  },\n\n  data: () => ({\n    // Suggested command\n    command: '',\n    // Users input\n    search: ''\n  }),\n\n  watch: {\n    search () {\n      // Search in executed commands\n      this.executed.forEach((executed) => {\n        if (executed.startsWith(this.search)) {\n          this.command = executed\n          // Set the new Stdin\n          this.setStdin(executed)\n        }\n      })\n    }\n  },\n\n  created () {\n    this.command = this.stdin\n  },\n\n  mounted () {\n    // Force autofocus\n    this.focus()\n\n    // Resize input about characters\n    function resize () {\n      this.style.width = `${this.value.length}ch`\n    }\n    const input = this.$refs.input\n    input.addEventListener('input', resize)\n\n    resize.call(input)\n  },\n\n  methods: {\n    handle () {\n      this.$emit('update:isSearch', false)\n      // Request to handle the current search\n      this.$emit('handle', this.command)\n    },\n\n    focus () {\n      this.$refs.input.focus()\n    },\n\n    setIsSearch (isSearch) {\n      this.$emit('update:isSearch', isSearch)\n    },\n\n    // Terminate search after cancellation\n    sigint () {\n      this.setStdin('')\n      this.$emit('update:isSearch', false)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../scss/mixins\";\n\n.vue-command {\n  .term-search-container {\n    display: flex;\n  }\n\n  input,\n  textarea {\n    background: none;\n    border: none;\n    font-family: \"Inconsolata\", monospace;\n    font-size: 1rem;\n    outline: none;\n    flex: 1;\n    width: 100%;\n\n    &::placeholder {\n      color: rgba(255, 255, 255, 0.5);\n    }\n  }\n\n  .term-search {\n    flex: 1;\n    background: none;\n    margin: 0;\n    border: 0;\n    color: inherit;\n    font-family: inherit;\n    font-size: 1rem;\n  }\n\n  .term-ps {\n    margin-right: 0.5rem;\n    color: #71ad38;\n    font-size: 20px;\n  }\n}\n</style>\n"]}]}